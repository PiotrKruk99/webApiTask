// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webApi.DataClasses;

#nullable disable

namespace webApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230105120401_include test")]
    partial class IncludeTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("webApi.DataClasses.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WriterId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("YearOfPublication")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("webApi.DataClasses.Entities.TestEntityOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityTwoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityTwoId");

                    b.ToTable("TestEntityOnes");
                });

            modelBuilder.Entity("webApi.DataClasses.Entities.TestEntityTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value2")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TestEntityTwo");
                });

            modelBuilder.Entity("webApi.DataClasses.Entities.Writer", b =>
                {
                    b.Property<int>("WriterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WriterId");

                    b.ToTable("Writers");
                });

            modelBuilder.Entity("webApi.DataClasses.Entities.TestEntityOne", b =>
                {
                    b.HasOne("webApi.DataClasses.Entities.TestEntityTwo", "EntityTwo")
                        .WithMany()
                        .HasForeignKey("EntityTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityTwo");
                });
#pragma warning restore 612, 618
        }
    }
}
